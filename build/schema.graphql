type user @entity {
  "the id of the user"
  id: ID!

  "the farcaster id of the user"
  address: Bytes!

  "the available time slots for the profile"
  predictions: [prediction!]! @derivedFrom(field: "user")

  "the selected time period options for booking calls"
  claims: [claim!]! @derivedFrom(field: "user")

  "the rewards claimed by the user"
  rewards: [reward!]! @derivedFrom(field: "user")

  "the total points won by the user"
  totalPointsWon: BigInt!

  "the total games the user played"
  totalGamesPlayed: BigInt!

  "the total games in which the user claimed points"
  totalGamesClaimed: BigInt!

  "total amount of USDC earned"
  totalEarnings: BigInt!

  "total amount of USDC spent"
  totalSpent: BigInt!

  "total Claimmable USDC"
  totalClaimmables: BigInt!
}

type game @entity {
  "the id of the game"
  id: ID!

  "the predictions of the users in the game"
  predictions: [prediction!]! @derivedFrom(field: "game")

  "the claims by users in this game"
  claims: [claim!]! @derivedFrom(field: "game")

  "the rewards claimed by users in this game"
  rewards: [reward!]! @derivedFrom(field: "game")

  "the remapping of the player ids"
  playerIdRemapping: String!

  "start time of the prediction aka. when the remappings were set"
  predictionsStartTime: BigInt!

  "the time when the results are posted on-chain post-game via chainlink"
  resultsPublishedTime: BigInt

  "the results of the game hosted on IPFS via Pinata"
  gameResults: String

  "the merkle root of the points of all the players in the game"
  pointsMerkleRoot: Bytes

  "the transaction hash in which the player id remappings were updated"
  transactionHash: Bytes!
}

type prediction @entity {
  "the id of the prediction"
  id: ID!

  "the profile of the user"
  user: user!

  "the squad hash"
  squadHash: Bytes!

  "the gameweek of the prediction"
  game: game!

  "the claims of user who made the prediction"
  claim: claim @derivedFrom(field: "prediction")

  "the reward of the user who made the prediction"
  reward: reward @derivedFrom(field: "prediction")

  "the bet amount placed by the user"
  amount: BigInt!

  "the transaction hash in which the prediction was created"
  transactionHash: Bytes!
}

type claim @entity {
  "the id of the points claim"
  id: ID!

  "the profile of the claimer"
  user: user!

  "the prediction of the user"
  prediction: prediction!

  "the game of the claim"
  game: game!

  "the points won by the user"
  points: BigInt!

  "the reward of the user"
  reward: reward! @derivedFrom(field: "claim")

  "the transaction hash in which the points were claimed"
  transactionHash: Bytes!
}

type reward @entity {
  "the id of the reward"
  id: ID!

  "the user who claimed the reward"
  user: user!

  "the amount of USDC rewarded"
  amount: BigInt!

  "the game in which the reward was claimed"
  game: game!

  "the prediction of the user"
  prediction: prediction!

  "the claim of the user"
  claim: claim!

  "the position of the user in the leaderboard for the game"
  position: BigInt!

  "the transaction hash in which the reward was claimed"
  transactionHash: Bytes!
}
